name: publish npm @oicana/browser-wasm

on:
  workflow_dispatch:

permissions:
  contents: write

env:
  CRATE_DIR: oicana_browser_wasm
  LIB_NAME: oicana-browser-wasm
  SCOPE: oicana

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    env:
      NPM_AUTH: ${{ secrets.NPM_AUTH }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          targets: wasm32-unknown-unknown
      - uses: taiki-e/install-action@v2
        with:
          tool: wasm-pack
      - name: Build release
        run: wasm-pack build --release --target web --scope ${{ env.SCOPE }} integrations/browser/${{ env.CRATE_DIR }}
      - name: Copy License file
        run: cp LICENSE.md integrations/browser/$CRATE_DIR/pkg
      - name: rename package
        run: jq '.name = "@oicana/browser-wasm"' package.json > tmp.json && mv tmp.json package.json
        working-directory: integrations/browser/${{ env.CRATE_DIR }}/pkg
      - name: Pack
        run: npm pack
        working-directory: integrations/browser/${{ env.CRATE_DIR }}/pkg
      - name: version
        run: echo "version=$(jq -r '.version' package.json)" >> $GITHUB_OUTPUT
        working-directory: integrations/browser/${{ env.CRATE_DIR }}/pkg
      - uses: actions/upload-artifact@v4
        with:
          name: "oicana-browser-wasm-${{ steps.version.outputs.version }}.tgz"
          path: integrations/browser/${{ env.CRATE_DIR }}/pkg/${{ env.LIB_NAME }}-*.tgz
      - name: Publish
        run: |
          VERSION=$(jq -r '.version' package.json)
          echo "//registry.npmjs.org/:_authToken=$NPM_TOKEN" >> ~/.npmrc
          if echo $VERSION | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+$";
          then
            npm publish --access public
          elif echo $VERSION | grep "^[0-9]\+\.[0-9]\+\.[0-9]\+";
          then
            npm publish --tag next --access public
          fi
        working-directory: integrations/browser/${{ env.CRATE_DIR }}/pkg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
